// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg.proto

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Msg_Type int32

const (
	Msg_Unknown Msg_Type = 0
	Msg_Chat    Msg_Type = 1
	Msg_Game    Msg_Type = 2
)

var Msg_Type_name = map[int32]string{
	0: "Unknown",
	1: "Chat",
	2: "Game",
}
var Msg_Type_value = map[string]int32{
	"Unknown": 0,
	"Chat":    1,
	"Game":    2,
}

func (x Msg_Type) String() string {
	return proto.EnumName(Msg_Type_name, int32(x))
}
func (Msg_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

// 消息
type Msg struct {
	Id   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type Msg_Type `protobuf:"varint,2,opt,name=type,enum=msg.Msg_Type" json:"type,omitempty"`
	Body []byte   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Msg) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Msg) GetType() Msg_Type {
	if m != nil {
		return m.Type
	}
	return Msg_Unknown
}

func (m *Msg) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*Msg)(nil), "msg.Msg")
	proto.RegisterEnum("msg.Msg_Type", Msg_Type_name, Msg_Type_value)
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0x2d, 0x4e, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0x2d, 0x4e, 0x57, 0x2a, 0xe5, 0x62, 0xf6, 0x2d,
	0x4e, 0x17, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca,
	0x4c, 0x11, 0x52, 0xe4, 0x62, 0x29, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x33,
	0xe2, 0xd5, 0x03, 0xe9, 0xf2, 0x2d, 0x4e, 0xd7, 0x0b, 0xa9, 0x2c, 0x48, 0x0d, 0x02, 0x4b, 0x09,
	0x09, 0x71, 0xb1, 0x24, 0xe5, 0xa7, 0x54, 0x4a, 0x30, 0x2b, 0x30, 0x6a, 0xf0, 0x04, 0x81, 0xd9,
	0x4a, 0xea, 0x5c, 0x2c, 0x20, 0x15, 0x42, 0xdc, 0x5c, 0xec, 0xa1, 0x79, 0xd9, 0x79, 0xf9, 0xe5,
	0x79, 0x02, 0x0c, 0x42, 0x1c, 0x5c, 0x2c, 0xce, 0x19, 0x89, 0x25, 0x02, 0x8c, 0x20, 0x96, 0x7b,
	0x62, 0x6e, 0xaa, 0x00, 0x53, 0x12, 0x1b, 0xd8, 0x09, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x81, 0xa1, 0x61, 0xfd, 0x8f, 0x00, 0x00, 0x00,
}
